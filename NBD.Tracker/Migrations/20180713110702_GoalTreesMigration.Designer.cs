// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NBD.Tracker.DAL;

namespace NBD.Tracker.Migrations
{
    [DbContext(typeof(TrackerContext))]
    [Migration("20180713110702_GoalTreesMigration")]
    partial class GoalTreesMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NBD.SDK.Goal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("EndDate");

                    b.Property<bool>("IsReached");

                    b.Property<Guid?>("ParentGoalId");

                    b.Property<long>("Progress");

                    b.Property<int>("RecurrenceType");

                    b.Property<long>("RecurrenceValue");

                    b.Property<DateTime?>("StartDate");

                    b.Property<int?>("Target");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.HasKey("Id");

                    b.HasIndex("ParentGoalId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("NBD.SDK.GoalTree", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("PrivateHash")
                        .IsRequired();

                    b.Property<string>("PublicHash")
                        .IsRequired();

                    b.Property<Guid>("RootId");

                    b.HasKey("Id");

                    b.HasIndex("RootId");

                    b.ToTable("Trees");
                });

            modelBuilder.Entity("NBD.SDK.Goal", b =>
                {
                    b.HasOne("NBD.SDK.Goal", "ParentGoal")
                        .WithMany("SubGoals")
                        .HasForeignKey("ParentGoalId");
                });

            modelBuilder.Entity("NBD.SDK.GoalTree", b =>
                {
                    b.HasOne("NBD.SDK.Goal", "Root")
                        .WithMany()
                        .HasForeignKey("RootId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
